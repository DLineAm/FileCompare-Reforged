<Application x:Class="FileCompare_Reforged.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:FileCompare_Reforged">
    <Application.Resources>
         <FontFamily x:Key="VagWorld">pack://application:,,,/#VAG World</FontFamily>
        <FontFamily x:Key="Lucida Grande">pack://application:,,,/#8291</FontFamily>
        <FontFamily x:Key="San Francisco">pack://application:,,,/#San Francisco</FontFamily>
        
        <SolidColorBrush x:Key="ProgressBar.Progress"
                         Color="#FF06B025" />
        <SolidColorBrush x:Key="ProgressBar.Background"
                         Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="ProgressBar.Border"
                         Color="#FFBCBCBC" />
        <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground"
                    Value="{StaticResource ProgressBar.Progress}" />
            <Setter Property="Background"
                    Value="{StaticResource ProgressBar.Background}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource ProgressBar.Border}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate" />
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)"
                                                                           Storyboard.TargetName="Animation">
                                                <EasingDoubleKeyFrame KeyTime="0"
                                                                      Value="0.25" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:1"
                                                                      Value="0.25" />
                                                <EasingDoubleKeyFrame KeyTime="0:0:2"
                                                                      Value="0.25" />
                                            </DoubleAnimationUsingKeyFrames>
                                            <PointAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)"
                                                                          Storyboard.TargetName="Animation">
                                                <EasingPointKeyFrame KeyTime="0"
                                                                     Value="-0.5,0.5" />
                                                <EasingPointKeyFrame KeyTime="0:0:1"
                                                                     Value="0.5,0.5" />
                                                <EasingPointKeyFrame KeyTime="0:0:2"
                                                                     Value="1.5,0.5" />
                                            </PointAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" CornerRadius="6" />
                            <Rectangle x:Name="PART_Track" />
                            <Grid x:Name="PART_Indicator"
                                  ClipToBounds="true"
                                  HorizontalAlignment="Left">
                                <Rectangle x:Name="Indicator"
                                           Fill="{TemplateBinding Foreground}" RadiusX="6" RadiusY="15"
                                            />
                                <Rectangle x:Name="Animation"
                                           Fill="{TemplateBinding Foreground}" RadiusX="6" RadiusY="15"
                                           
                                           RenderTransformOrigin="0.5,0.5">
                                    <Rectangle.RenderTransform>
                                        <TransformGroup>
                                            <ScaleTransform />
                                            <SkewTransform />
                                            <RotateTransform />
                                            <TranslateTransform />
                                        </TransformGroup>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                            </Grid>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Orientation"
                                     Value="Vertical">
                                <Setter Property="LayoutTransform"
                                        TargetName="TemplateRoot">
                                    <Setter.Value>
                                        <RotateTransform Angle="-90" />
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="IsIndeterminate"
                                     Value="true">
                                <Setter Property="Visibility"
                                        TargetName="Indicator"
                                        Value="Collapsed" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1"
                                   StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background"
                         Color="#FFFFFFFF" />
        <SolidColorBrush x:Key="OptionMark.Static.Border"
                         Color="#FF707070" />
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0"
                                   SnapsToDevicePixels="true"
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                   StrokeThickness="1"
                                   StrokeDashArray="1 2" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background"
                         Color="#FFF3F9FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border"
                         Color="#FF5593FF" />
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph"
                         Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Background"
                         Color="#FFE6E6E6" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Border"
                         Color="#FFBCBCBC" />
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph"
                         Color="#FF707070" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Background"
                         Color="#FFD9ECFF" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Border"
                         Color="#FF3C77DD" />
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph"
                         Color="#FF212121" />
        <SolidColorBrush x:Key="OptionMark.Static.Glyph"
                         Color="#FF212121" />
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle"
                    Value="{StaticResource FocusVisual}" />
            <Setter Property="Background"
                    Value="{StaticResource OptionMark.Static.Background}" />
            <Setter Property="BorderBrush"
                    Value="{StaticResource OptionMark.Static.Border}" />
            <Setter Property="Foreground"
                    Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness"
                    Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="templateRoot"
                              Background="Transparent"
                              SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    Margin="1"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Border.Effect>
                                    <DropShadowEffect Direction="100"
                                                      ShadowDepth="0"
                                                      RenderingBias="Quality"
                                                      BlurRadius="2"
                                                      Color="#FFDADADA" />
                                </Border.Effect>
                                <Grid x:Name="markGrid">
                                    <Path x:Name="optionMark"
                                          Data="F1 M 9.97498,1.22334L 4.6983,9.09834L 4.52164,9.09834L 0,5.19331L 1.27664,3.52165L 4.255,6.08833L 8.33331,1.52588e-005L 9.97498,1.22334 Z "
                                          Fill="{StaticResource OptionMark.Static.Glyph}"
                                          Margin="1"
                                          Opacity="0"
                                          Stretch="None">
                                    </Path>
                                    <Rectangle x:Name="indeterminateMark"
                                               Fill="{StaticResource OptionMark.Static.Glyph}"
                                               Margin="2"
                                               Opacity="0">
                                    </Rectangle>
                                </Grid>
                            </Border>
                            <ContentPresenter x:Name="contentPresenter"
                                              Grid.Column="1"
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="HasContent"
                                     Value="true">
                                <Setter Property="FocusVisualStyle"
                                        Value="{StaticResource OptionMarkFocusVisual}" />
                                <Setter Property="Padding"
                                        Value="4,-1,0,0" />
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="checkBoxBorder"
                                        Value="#FFB1CEFF" />
                                <Setter Property="BorderBrush"
                                        TargetName="checkBoxBorder"
                                        Value="{StaticResource OptionMark.MouseOver.Border}" />
                                <Setter Property="Fill"
                                        TargetName="optionMark"
                                        Value="White" />
                                <Setter Property="Fill"
                                        TargetName="indeterminateMark"
                                        Value="{StaticResource OptionMark.MouseOver.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsEnabled"
                                     Value="false">
                                <Setter Property="Background"
                                        TargetName="checkBoxBorder"
                                        Value="{StaticResource OptionMark.Disabled.Background}" />
                                <Setter Property="BorderBrush"
                                        TargetName="checkBoxBorder"
                                        Value="{StaticResource OptionMark.Disabled.Border}" />
                                <Setter Property="Fill"
                                        TargetName="optionMark"
                                        Value="White" />
                                <Setter Property="Fill"
                                        TargetName="indeterminateMark"
                                        Value="{StaticResource OptionMark.Disabled.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="true">
                                <Setter Property="Background"
                                        TargetName="checkBoxBorder"
                                        Value="#FF84B1FF" />
                                <Setter Property="BorderBrush"
                                        TargetName="checkBoxBorder"
                                        Value="{StaticResource OptionMark.Pressed.Border}" />
                                <Setter Property="Fill"
                                        TargetName="optionMark"
                                        Value="White" />
                                <Setter Property="Fill"
                                        TargetName="indeterminateMark"
                                        Value="{StaticResource OptionMark.Pressed.Glyph}" />
                            </Trigger>
                            <Trigger Property="IsChecked"
                                     Value="true">
                                <Setter Property="Opacity"
                                        TargetName="optionMark"
                                        Value="1" />
                                <Setter Property="Opacity"
                                        TargetName="indeterminateMark"
                                        Value="0" />
                                <Setter Property="Background"
                                        Value="#FF3F86FF" />
                                <Setter Property="Fill"
                                        TargetName="optionMark"
                                        Value="White" />
                                <Setter Property="BorderBrush"
                                        TargetName="checkBoxBorder"
                                        Value="#FF5480D3" />
                            </Trigger>
                            <Trigger Property="IsChecked"
                                     Value="{x:Null}">
                                <Setter Property="Opacity"
                                        TargetName="optionMark"
                                        Value="0" />
                                <Setter Property="Opacity"
                                        TargetName="indeterminateMark"
                                        Value="1" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
       
    </Application.Resources>
</Application>
